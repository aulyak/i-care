/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/dashboard.js":
/*!***********************************!*\
  !*** ./resources/js/dashboard.js ***!
  \***********************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar dt = luxon.DateTime;\nvar monthList = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];\nfunction groupByWitelOrSTO(arr, isSelectedWitel) {\n  var result = _toConsumableArray(arr.reduce(function (r, o) {\n    var key = isSelectedWitel ? o.STO : o.WITEL;\n    var item = r.get(key) || Object.assign({}, o, {\n      TOTAL_LIS: 0\n    });\n    item.TOTAL_LIS += parseFloat(o.TOTAL_LIS);\n    return r.set(key, item);\n  }, new Map()).values());\n  return result;\n}\nfunction groupProfileLossByYearMonth(arr) {\n  var result = _toConsumableArray(arr.reduce(function (r, o) {\n    var key = o.BULAN;\n    var item = r.get(key) || Object.assign({}, o, {\n      JUMLAH: 0\n    });\n    item.JUMLAH += parseFloat(o.JUMLAH);\n    return r.set(key, item);\n  }, new Map()).values());\n  return result;\n}\nfunction groupSummaryByYearMonth(arr) {\n  var result = _toConsumableArray(arr.reduce(function (r, o) {\n    var key = o.BULAN;\n    var item = r.get(key) || Object.assign({}, o, {\n      TOTAL_SALES: 0,\n      TARGET_SALES: 0\n    });\n    item.TOTAL_SALES += parseFloat(o.TOTAL_SALES) || 0;\n    item.TARGET_SALES += parseFloat(o.TARGET_SALES) || 0;\n    return r.set(key, item);\n  }, new Map()).values());\n  return result;\n}\nfunction transformArray(array) {\n  var arr = array.map(function (item) {\n    for (var key in item) {\n      if (Object.hasOwnProperty.call(item, key)) {\n        if (key === 'BULAN') delete item[key];\n      }\n    }\n    return item;\n  });\n  var result = [];\n  var labels = new Set(); // set to keep track of unique labels\n\n  // iterate through each object to collect all unique labels\n  arr.forEach(function (obj) {\n    Object.keys(obj).forEach(function (key) {\n      labels.add(key);\n    });\n  });\n\n  // create a new object for each label and its corresponding data\n  labels.forEach(function (label) {\n    var data = arr.map(function (obj) {\n      return obj[label] || 0;\n    }); // map values to an array\n    result.push({\n      label: label,\n      data: data,\n      type: 'bar',\n      yAxisID: 'y1'\n    });\n  });\n  return result;\n}\n$(document).ready( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n  var $topNav, $li, imgSrc, $img, filteredProporsi, filteredProfileLoss, filteredAlert, dataTotal, witel, isSelectedWitel, filteredProporsiFlat, filteredProfileLossFlat, filteredAlertFlat, groupedSummary, sumTotalLis, groupedPercentage, groupedProfileLossByYearMonth, groupedSummaryByYearMonth, mergedTrendDataBars, mergedTrendDataLine, canvasSummary, ctxSummary, canvasProporsi, ctxProporsi, canvasTrend, ctxTrend, labelsSummary, dataSummaryRaw, labelsTrendMonth, dataSetSummary, i, dataLossToSales, dataSetTrend, dataTrend, dataSummary, dataProporsi, areaChartData, areaChartOptions, summaryChart, proporsiChart, trendChart;\n  return _regeneratorRuntime().wrap(function _callee$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        setInterval(function () {\n          var now = dt.now();\n          var currentDtReadable = now.toLocaleString({\n            weekday: 'long',\n            month: 'long',\n            day: '2-digit',\n            year: 'numeric'\n          });\n          var localTime = now.toFormat('HH:mm');\n          $('.date').text(currentDtReadable);\n          $('.time').text(localTime);\n        }, 1000);\n        $topNav = $('#topnav-logo');\n        $li = $topNav.find('a');\n        imgSrc = $li.data('src');\n        $img = $(\"<img src=\\\"\".concat(imgSrc, \"\\\" style=\\\"height: 2.5rem; width: fit-content;\\\">\"));\n        $topNav.append($img);\n        $li.remove();\n        filteredProporsi = $('#summary').data('filtered-summary');\n        filteredProfileLoss = $('#summary').data('filtered-profile-loss');\n        filteredAlert = $('#summary').data('filtered-profile-loss');\n        dataTotal = $('#summary').data('total');\n        witel = $('select[name=\"witel\"');\n        isSelectedWitel = $(witel).val() !== '';\n        filteredProporsiFlat = filteredProporsi ? Object.values(filteredProporsi) : '';\n        filteredProfileLossFlat = filteredProfileLoss ? Object.values(filteredProfileLoss) : '';\n        filteredAlertFlat = filteredAlert ? Object.values(filteredAlert) : '';\n        groupedSummary = groupByWitelOrSTO(filteredProporsiFlat, isSelectedWitel);\n        sumTotalLis = groupedSummary.reduce(function (adder, item) {\n          return adder + item.TOTAL_LIS;\n        }, 0);\n        groupedPercentage = groupedSummary.map(function (item) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            percentage: item.TOTAL_LIS / sumTotalLis * 100\n          });\n        });\n        groupedProfileLossByYearMonth = groupProfileLossByYearMonth(filteredProfileLoss);\n        groupedSummaryByYearMonth = groupSummaryByYearMonth(filteredProporsi);\n        mergedTrendDataBars = groupedSummaryByYearMonth.map(function (item) {\n          var findSameYearMonth = groupedProfileLossByYearMonth.find(function (profile) {\n            return profile.BULAN === item.BULAN;\n          });\n          var totalLoss = 0;\n          if (findSameYearMonth) {\n            totalLoss = findSameYearMonth.JUMLAH;\n          }\n          item['TOTAL_LOSS'] = totalLoss;\n          return {\n            'BULAN': item.BULAN,\n            'TOTAL LOSS': item.TOTAL_LOSS,\n            'TOTAL SALES': item.TOTAL_SALES,\n            'TARGET SALES': item.TARGET_SALES\n          };\n        });\n        mergedTrendDataLine = mergedTrendDataBars.map(function (item) {\n          return {\n            'BULAN': item.BULAN,\n            'LOSS_TO_SALES': parseFloat(item['TOTAL LOSS']) / parseFloat(item['TOTAL SALES']) * 100\n          };\n        });\n        canvasSummary = document.getElementById('summary');\n        ctxSummary = canvasSummary.getContext('2d');\n        canvasProporsi = document.getElementById('proporsi');\n        ctxProporsi = canvasProporsi.getContext('2d');\n        canvasTrend = document.getElementById('trend');\n        ctxTrend = canvasTrend.getContext('2d');\n        labelsSummary = Object.keys(dataTotal);\n        dataSummaryRaw = Object.values(dataTotal);\n        labelsTrendMonth = mergedTrendDataBars.map(function (item) {\n          var monthNum = parseInt(item.BULAN.substr(item.BULAN.length - 2, 2));\n          return monthList[monthNum - 1];\n        });\n        dataSetSummary = [];\n        for (i = 0; i < labelsSummary.length; i++) {\n          dataSetSummary.push({\n            x: labelsSummary[i],\n            y: dataSummaryRaw[i]\n          });\n        }\n        dataLossToSales = mergedTrendDataLine.map(function (item) {\n          return item.LOSS_TO_SALES;\n        });\n        dataSetTrend = transformArray(mergedTrendDataBars);\n        dataSetTrend.push({\n          type: 'line',\n          label: 'LOSS TO SALES',\n          data: dataLossToSales,\n          yAxisID: 'y'\n        });\n        dataTrend = {\n          labels: labelsTrendMonth,\n          datasets: dataSetTrend\n        };\n        dataSummary = {\n          datasets: [{\n            data: dataSetSummary,\n            backgroundColor: Object.keys(dataTotal).map(function (item) {\n              return '#' + (Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');\n            })\n          }]\n        };\n        dataProporsi = {\n          labels: groupedSummary.map(function (item) {\n            return isSelectedWitel ? item.STO : item.WITEL;\n          }),\n          datasets: [{\n            label: 'Total LIS',\n            data: groupedPercentage.map(function (item) {\n              return item.percentage.toFixed(2);\n            }),\n            backgroundColor: groupedSummary.map(function (item) {\n              return '#' + (Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');\n            })\n          }]\n        };\n        areaChartData = {\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          datasets: [{\n            label: 'Loss',\n            backgroundColor: 'rgba(60,141,188,0.9)',\n            borderColor: 'rgba(60,141,188,0.8)',\n            pointRadius: false,\n            pointColor: '#3b8bba',\n            pointStrokeColor: 'rgba(60,141,188,1)',\n            pointHighlightFill: '#fff',\n            pointHighlightStroke: 'rgba(60,141,188,1)',\n            data: [28, 48, 40, 19, 86, 27, 90]\n          }, {\n            label: 'Sales',\n            backgroundColor: 'rgba(210, 214, 222, 1)',\n            borderColor: 'rgba(210, 214, 222, 1)',\n            pointRadius: false,\n            pointColor: 'rgba(210, 214, 222, 1)',\n            pointStrokeColor: '#c1c7d1',\n            pointHighlightFill: '#fff',\n            pointHighlightStroke: 'rgba(220,220,220,1)',\n            data: [65, 59, 80, 81, 56, 55, 40]\n          }]\n        };\n        areaChartOptions = {\n          maintainAspectRatio: false,\n          responsive: true,\n          legend: {\n            display: true\n          }\n        };\n        summaryChart = new Chart(ctxSummary, {\n          type: 'bar',\n          data: dataSummary,\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            plugins: {\n              legend: {\n                position: 'top',\n                display: false\n              },\n              title: {\n                display: true,\n                text: 'Summary LIS, Sales & Churn'\n              }\n            }\n          }\n        });\n        proporsiChart = new Chart(ctxProporsi, {\n          type: 'pie',\n          data: dataProporsi,\n          options: {\n            responsive: true,\n            plugins: {\n              tooltip: {\n                callbacks: {\n                  label: function label(context) {\n                    return context.raw + ' %';\n                  }\n                }\n              },\n              legend: {\n                display: false,\n                position: 'top'\n              },\n              title: {\n                display: false,\n                text: 'Proporsi LIS'\n              }\n            }\n          }\n        });\n        trendChart = new Chart(ctxTrend, {\n          data: dataTrend,\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                display: true,\n                position: 'right'\n              },\n              y1: {\n                display: true,\n                position: 'left'\n              }\n            },\n            plugins: {\n              legend: {\n                position: 'top',\n                display: true\n              },\n              title: {\n                display: true,\n                text: 'Summary LIS, Sales & Churn'\n              }\n            }\n          }\n        });\n      case 45:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _callee);\n})));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dashboard.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/dashboard.js"]();
/******/ 	
/******/ })()
;